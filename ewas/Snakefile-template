#!/bin/python

import os, sys

## Directories being used
LOCAL_DIR = os.getcwd()
SCR_DIR = "" 
ARIES_DIR = ""

CHUNKS = list(range(1, 101))

## Cell-specific effects methods used here
METHODS = ["celldmc", "tca", "omicwas"]

rule all:
    input:
        expand(SCR_DIR + "/" + "results/ewas/ewaff-res-{model}.tsv", model = ["cc", "no-cc"]),
        SCR_DIR + "/" + "results/ewas/celldmc-res.RData",
        SCR_DIR + "/" + "results/ewas/tca-res.RData",
        LOCAL_DIR + "/" + "report/cs-ewas-report.html"

## Generate SVs that can be used as covariates in the EWAS
rule gen_svs:
    input:
        script = LOCAL_DIR + "/" + "scripts/gen-svs.R", 
        phen = SCR_DIR + "/" + "../data-extraction-and-qc/data/ad-data-cleaned.tsv",
        meth = SCR_DIR + "/" + "../data-extraction-and-qc/data/clean-meth.RData",
    output:
        svs = SCR_DIR + "/" + "data/svs/ad-svs.tsv",
        removed_svs = SCR_DIR + "/" + "data/svs/ad-removed-svs.RData",
        covars_outfile = SCR_DIR + "/" + "../data-extraction-and-qc/data/covars-no-cc.txt", 
        cc_covars_outfile = SCR_DIR + "/" + "../data-extraction-and-qc/data/covars-cc.txt",
        heatmap = SCR_DIR + "/" + "results/svs-heatmap.png"
    params:
        aries_dir = ARIES_DIR        
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.phen}' \
                                        '{input.meth}' \
                                        '{params.aries_dir}' \
                                        '{output.svs}' \
                                        '{output.removed_svs}' \
                                        '{output.covars_outfile}' \
                                        '{output.cc_covars_outfile}' \
                                        '{output.heatmap}' """

## Run the "conventional" EWAS adjusting for cell counts
rule conv_ewas:
    input:
        script = LOCAL_DIR + "/" + "scripts/conventional-ewas.R", 
        phen = SCR_DIR + "/" + "../data-extraction-and-qc/data/ad-data-cleaned.tsv",
        meth = SCR_DIR + "/" + "../data-extraction-and-qc/data/clean-meth.RData",
        svs = SCR_DIR + "/" + "data/svs/ad-svs.tsv",
        covars = SCR_DIR + "/" + "../data-extraction-and-qc/data/covars-{model}.txt",
    output: 
        SCR_DIR + "/" + "results/ewas/ewaff-res-{model}.tsv"
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.phen}' \
                                        '{input.meth}' \
                                        '{input.svs}' \
                                        '{input.covars}' \
                                        '{output}' """   

## Run the cell-specific EWAS
rule celldmc:
    input:
        script = LOCAL_DIR + "/" + "scripts/celldmc-ewas.R", 
        phen = SCR_DIR + "/" + "../data-extraction-and-qc/data/ad-data-cleaned.tsv",
        meth = SCR_DIR + "/" + "../data-extraction-and-qc/data/clean-meth.RData",
        svs = SCR_DIR + "/" + "data/svs/ad-svs.tsv",
        covars = SCR_DIR + "/" + "../data-extraction-and-qc/data/covars-no-cc.txt",        
    output: 
        SCR_DIR + "/" + "results/ewas/celldmc-res.RData"
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.phen}' \
                                        '{input.meth}' \
                                        '{input.svs}' \
                                        '{input.covars}' \
                                        '{output}' """   

## Run the TCA analyses
rule tca:
    input:
        script = LOCAL_DIR + "/" + "scripts/tca-ewas.R", 
        phen = SCR_DIR + "/" + "../data-extraction-and-qc/data/ad-data-cleaned.tsv",
        meth = SCR_DIR + "/" + "../data-extraction-and-qc/data/clean-meth.RData",
        svs = SCR_DIR + "/" + "data/svs/ad-svs.tsv",
        covars = SCR_DIR + "/" + "../data-extraction-and-qc/data/covars-no-cc.txt",
    output: 
        expand(SCR_DIR + "/" + "results/ewas/tca-temp/tca-res-{chunk}.RData", chunk = CHUNKS)
    params:
        max_chunks = len(CHUNKS)
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.phen}' \
                                        '{input.meth}' \
                                        '{input.svs}' \
                                        '{input.covars}' \
                                        '{output}' \
                                        '{params.max_chunks} '"""   

## Combine TCA results into one file
rule tca_comb:
    input:
        script = LOCAL_DIR + "/" + "scripts/combine-tca-res.R", 
        tca = expand(SCR_DIR + "/" + "results/ewas/tca-temp/tca-res-{chunk}.RData", chunk = CHUNKS),
    output: 
        SCR_DIR + "/" + "results/ewas/tca-res.RData"
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.tca}' \
                                        '{output}' """  

## Extract hits from the cell-specific EWAS
rule extract_hits:
    input:
        script = LOCAL_DIR + "/" + "scripts/extract-cse-hits.R", 
        celldmc = SCR_DIR + "/" + "results/ewas/celldmc-res.RData", 
        tca = SCR_DIR + "/" + "results/ewas/tca-res.RData", 
    output: 
        SCR_DIR + "/" + "results/celldmc-tca-hits.RData"
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.celldmc}' \
                                        '{input.tca}' \
                                        '{output}' """   

## Run omicWAS on the hits from CellDMC + TCA
rule omicwas:
    input:
        script = LOCAL_DIR + "/" + "scripts/omicwas-ewas.R",
        phen = SCR_DIR + "/" + "../data-extraction-and-qc/data/ad-data-cleaned.tsv",
        meth = SCR_DIR + "/" + "../data-extraction-and-qc/data/clean-meth.RData",
        svs = SCR_DIR + "/" + "data/svs/ad-svs.tsv",
        hits = SCR_DIR + "/" + "results/celldmc-tca-hits.RData",
    output:
        SCR_DIR + "/" + "results/ewas/omicwas-res.RData"
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.phen}' \
                                        '{input.meth}' \
                                        '{input.svs}' \
                                        '{input.hits}' \
                                        '{output}' """

## Summarise the results
rule summ_res:
    input:
        script = LOCAL_DIR + "/" + "scripts/summarise-results.R",
        celldmc = SCR_DIR + "/" + "results/ewas/celldmc-res.RData", 
        tca = SCR_DIR + "/" + "results/ewas/tca-res.RData", 
        omicwas = SCR_DIR + "/" + "results/ewas/omicwas-res.RData",
        hits = SCR_DIR + "/" + "results/celldmc-tca-hits.RData",
        ewaff_cc = SCR_DIR + "/" + "results/ewas/ewaff-res-cc.tsv",
        ewaff_nocc = SCR_DIR + "/" + "results/ewas/ewaff-res-no-cc.tsv",
    output:
        man = SCR_DIR + "/" + "results/celldmc-tca-manhattans.png",
        qq = SCR_DIR + "/" + "results/celldmc-tca-qqs.png",
        summ = SCR_DIR + "/" + "results/summary-of-results.RData"
    shell:
        """echo $HOSTNAME; Rscript {input.script} \
                                        '{input.celldmc}' \
                                        '{input.tca}' \
                                        '{input.omicwas}' \
                                        '{input.hits}' \
                                        '{input.ewaff_cc}' \
                                        '{input.ewaff_nocc}' \
                                        '{output.man}' \
                                        '{output.qq}' \
                                        '{output.summ}' """

## Generate report                                        
rule cse_report:
    input:
        man = SCR_DIR + "/" + "results/celldmc-tca-manhattans.png",
        qq = SCR_DIR + "/" + "results/celldmc-tca-qqs.png",
        summ = SCR_DIR + "/" + "results/summary-of-results.RData",
        workflow = LOCAL_DIR + "/" + "report/cell-spec-workflow.drawio.png",
        report = LOCAL_DIR + "/" + "report/cs-ewas-report.Rmd"
    output:
        LOCAL_DIR + "/" + "report/cs-ewas-report.html"
    shell:
        """echo $HOSTNAME; \
                Rscript -e \"rmarkdown::render('{input.report}',
                                               output_format='all', 
                                               params = list(man = '{input.man}', 
                                                             qq = '{input.qq}', 
                                                             summ = '{input.summ}', 
                                                             workflow = '{input.workflow}'))\" """

